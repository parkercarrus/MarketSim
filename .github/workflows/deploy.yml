name: ci-cd
on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_TAG: sha-${{ github.sha }}
  GH_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-push:
    permissions: { contents: read, packages: write, id-token: write }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ env.GH_OWNER }}/aitradingsim-frontend:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.GH_OWNER }}/aitradingsim-frontend:latest

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ env.GH_OWNER }}/aitradingsim-backend:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.GH_OWNER }}/aitradingsim-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Rsync compose & Caddyfile to server
        uses: burnett01/rsync-deployments@6.0
        with:
          switches: -avzr --delete
          path: |
            docker-compose.yaml
            Caddyfile
          remote_path: ${{ secrets.SSH_REMOTE_DIR }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.SSH_REMOTE_DIR }}
            export IMAGE_TAG=${{ env.IMAGE_TAG }}
            export GH_OWNER=${{ env.GH_OWNER }}
            docker compose pull
            docker compose up -d
            docker image prune -f
